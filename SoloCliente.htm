
<!DOCTYPE html>
<html>
  <head>
    <title>MAPA BASE</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta charset="ISO-8859-1">
    <style>
		html, body, #map_canvas {
		margin: 0;
		padding: 0;
		height: 100%;
		background-position:center center;
		background-repeat:no-repeat;
		}
		td {
		vertical-align: center;
		}
		#inicio {
		position: absolute;
		display:none;
		}
		table {
		border-spacing: 2px;
		border-spacing: 2px;
		border: "0";
		cellpadding: "0";
		cellspacing: "0";
		width: "50%";
		background: #fff;
		padding: 10px;
		margin: 10px;
		border: 2px solid #000;
		}
		#dist {
		margin: 1px;
		padding: 1px;
		}
		#legend {
		font-family: Arial, sans-serif;
		background: #fff;
		padding: 10px;
		margin: 10px;
		border: 2px solid #000;
		}
		#legend h3 {
		margin-top: 0;
		}
		#legend img {
		vertical-align: middle;
		}
		#box, #data, #legend{
		display:none;
		opacity: 0.8;
		}
		span#nombox{
			font-size: 12px;
			font-family: verdana;
			font-weight: bold;
			padding-right: 10px;
		}
		#vehiculo, #cliente, #chofer {
		  font-size: 10px;
		  font-family: verdana;
		  font-weight: bold;
		}
		#tvehiculo, #tcliente, #tchofer, #tvehiculodir, #tclientedir, #tchoferdir {
		  width: 150px;
		  font-size: 10px;
		  font-family: verdana;
		}
    </style>
	<script src="mi_archivo.txt"></script>
	<script src="https://maps.googleapis.com/maps/api/js"></script>
	<script>
		var DirIcon = 'http://maps.google.com/mapfiles/kml/';
		var icons = {
				cliente: {
				name: 'Cliente',
				icon: DirIcon + 'pal2/icon13.png'
			},
			vehiculo: {
				name: 'Vehículo',
				icon: DirIcon + 'pal4/icon15.png'
			},
			chofer: {
				name: 'Chofer',
				icon: DirIcon + 'pal2/icon6.png'
			}
		};
		var objetos = Object.keys(icons);
		var Reg = [registro1, registro2, registro3];
		var map; 
		var zoom = 15;
		var geocoder = new google.maps.Geocoder();;
		var bounds = new google.maps.LatLngBounds();
		var infowindow = new google.maps.InfoWindow(); 
		var datos_cargados = 0;

		function cargarDatos(){
			objetos.forEach(function(parametro, posicion){
				document.getElementById('dir'+parametro).value = Reg[posicion];
				DirToCoor('dir'+parametro, Reg[posicion]);
			});
		}
	
		function todoCargado() {
			datos_cargados++;
			console.log(datos_cargados);
			if (datos_cargados == objetos.length){
				pintaMapa();
			} 
		}

		function falloDeCarga() {
			datos_cargados++;
			console.log("2: "+datos_cargados);
			if (datos_cargados == objetos.length){
				console.log("Fallo de carga!");
				pintaMapa();
			} 
		}

		function DirToCoor(p, dir) {
			var ele = p + "coor";
			alert(dir);
			geocoder.geocode( { 'address': dir }, function(results, status) {
				if (dir != null && dir != '' && status == google.maps.GeocoderStatus.OK) {
					document.getElementById(ele).value = results[0].geometry.location;
					todoCargado();
				} else {
					if (dir != null && dir != '' && status != google.maps.GeocoderStatus.OK)
					{
						falloDeCarga();
					}
					//else if(status != google.maps.GeocoderStatus.OK) {
						todoCargado();
					//}
					alert(ele);
					
					document.getElementById(ele).value = (0,0);
					alert(document.getElementById(ele).value);
				}
			});
		}	
		
		function MostrarElementos(){
			document.getElementById('box').style.display = 'initial';
			if (objetos.length > 1){
				document.getElementById('data').style.display = 'initial';
			}
		}

		function initialize() {
			cargarDatos();
		}

		function pintaMapa(){
			if (document.getElementById('dir'+objetos[0]+'coor').value.toString() != '0'){
				MostrarElementos();
				
				var features = [
				  {
					position: new google.maps.LatLng(document.getElementById('dir'+objetos[0]+'coor').value.substring(1,document.getElementById('dir'+objetos[0]+'coor').value.indexOf(",")),parseFloat(document.getElementById('dir'+objetos[0]+'coor').value.substring(document.getElementById('dir'+objetos[0]+'coor').value.indexOf(",") +1))),
					type: objetos[0],
					dir: document.getElementById('dir'+objetos[0]).value,
					z: 2, //prioridad de aparición, icono con z mayor es el predominante y se superpone a los demás.
					transparency: 1
				  }, {
					position: new google.maps.LatLng(document.getElementById('dir'+objetos[1]+'coor').value.substring(1,document.getElementById('dir'+objetos[1]+'coor').value.indexOf(",")),parseFloat(document.getElementById('dir'+objetos[1]+'coor').value.substring(document.getElementById('dir'+objetos[1]+'coor').value.indexOf(",") +1))),
					type: objetos[1],
					dir: document.getElementById('dir'+objetos[1]).value,
					z: 1,
					transparency: 1
				  }, {
					position: new google.maps.LatLng(document.getElementById('dir'+objetos[2]+'coor').value.substring(1,document.getElementById('dir'+objetos[2]+'coor').value.indexOf(",")),parseFloat(document.getElementById('dir'+objetos[2]+'coor').value.substring(document.getElementById('dir'+objetos[2]+'coor').value.indexOf(",") +1))),
					type: objetos[2],
					dir: document.getElementById('dir'+objetos[2]).value,
					z: 0,
					transparency: 0.7
				  }
				];
				
				map = new google.maps.Map(document.getElementById('map_canvas'), {
				  zoom: zoom,
				  center: new google.maps.LatLng(41.384839453565945,2.1505413370483666),
				  mapTypeId: google.maps.MapTypeId.ROADMAP,
				});
				
				function addMarker(feature) {
					if (feature.position.toString() != '(0, 0)'){		
						var marker = new google.maps.Marker({
							position: feature.position,
							name: feature.type,
							icon: icons[feature.type].icon,
							map: map,
							draggable: true,
							opacity: feature.transparency,
							zIndex: feature.z
						});
						bounds.extend(marker.position);
						if (UnElemento()){
							map.panTo(marker.position);
						}	
						google.maps.event.addListener(marker, "dragend", function(evento) {
							document.getElementById("t"+marker.name).value = evento.latLng.lat() + ", " + evento.latLng.lng();
						});
					}
				}

				var par = document.getElementById('box');			
				for (var i = 0, feature; feature = features[i]; i++) {
					addMarker(feature);
					if(feature.position.toString() != '(0, 0)'){
						var tr = document.createElement('tr');
						tr.innerHTML = '<td><div id="' + feature.type + '"><img src="' + icons[feature.type].icon + '"></div></td><td><span id="nombox"><b>' + feature.type +
						'</b></span></td><td><input type="text" id="t' + feature.type + 'dir" value="' + feature.dir  + '" size="20" readonly="true"/></td><td><input type="text" id="t' + 
						feature.type + '" value="' + parseFloat(feature.position.lat()) + ", " + parseFloat(feature.position.lng()) + '" size="20" readonly="true"/></td>';
						par.appendChild(tr);
					}
				}	
				if (!UnElemento()){
					var tr = document.createElement('tr');
					tr.innerHTML = '<td><button type="button" onclick="calculateDistances();">Cálculo</button></td>';
					par.appendChild(tr);
						
					var dat = document.getElementById('data');			
					var tr = document.createElement('tr');
					tr.innerHTML = '<td></td><td><div id="dist">Distancia del vehículo al cliente final.</div></td>';
					dat.appendChild(tr);
					map.controls[google.maps.ControlPosition.RIGHT_TOP].push(dat);
				}
				
				map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(par);
				ResizeMap();
			} else { alert('ERROR al procesar las coordenadas.');}
		}
		
		function ResizeMap(){
			if (UnElemento()){
				map.setZoom(zoom);
			}else{	
				map.fitBounds(bounds);		
			}
		}
		
		function UnElemento(){
			var bool = false;
			if (document.getElementById('dir'+objetos[1]+'coor').value.toString() == '0' && document.getElementById('dir'+objetos[2]+'coor').value.toString() == '0'){
				bool = true;
			}
			return bool;
		}

		function calculateDistances() {
			limpiarDiv();
			DeleteCamino();
			var origen = new google.maps.LatLng(parseFloat(document.getElementById('t'+objetos[1]).value.split(",")[0]),parseFloat(document.getElementById('t'+objetos[1]).value.split(",")[1]));
			var destino = new google.maps.LatLng(parseFloat(document.getElementById('t'+objetos[0]).value.split(",")[0]),parseFloat(document.getElementById('t'+objetos[0]).value.split(",")[1]));
			var service = new google.maps.DistanceMatrixService();
			service.getDistanceMatrix(
			{
			origins: [origen],
			destinations: [destino],
			travelMode: google.maps.TravelMode.DRIVING,
			avoidHighways: false,
			avoidTolls: false
			}, callback);
			callback;
			loadCamino();
		}
		
		function callback(response, status) {
			var outputDiv = document.getElementById('dist');

			if (status == google.maps.DistanceMatrixStatus.OK) {
				var origins = response.originAddresses;
				var destinations = response.destinationAddresses;
				try{
					for (var i = 0; i < origins.length; i++) {
						var results = response.rows[i].elements;
						for (var j = 0; j < results.length; j++) {
							outputDiv.innerHTML += '<b>'+objetos[1]+'</b>' + origins[i] + '<br><b>'+objetos[1]+'</b>' + destinations[j]
							+ '<br><b>Distancia:  </b>' + results[j].distance.text + '<br><b>Tiempo:  </b> '
							+ results[j].duration.text + ' aproximadamente.<br>';
						}
					}
				}catch(err){alert("Faltan parámetros");}
			}
		}
		
		function limpiarDiv() {
			document.getElementById("dist").innerHTML="";
		}	
		
		function ChoferNoVehi(ori, desti) {
		var distance = DistanciaPuntos(ori, desti);
			alert(distance);
			if (distance > 10){
				alert('ATENCIÓN! El chofer se encuentra  a ' + distance + ' del vehículo.');
			}
		}		
		google.maps.event.addDomListener(window, 'load', initialize);	
    </script>
	<script>
		var dirRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true});
		function loadCamino(){
			var dirService = new google.maps.DirectionsService();
			dirRenderer.setMap(map);
			var request = {
				origin: document.getElementById('tvehiculo').value,
				destination: document.getElementById('tcliente').value,
				travelMode: google.maps.TravelMode.DRIVING
			};
			dirService.route(request, function(result, status) {
				if (status == google.maps.DirectionsStatus.OK) {
					dirRenderer.setDirections(result);
				}
			});
		}
		
		function DeleteCamino(){
			dirRenderer.setMap(null);
		}
		
		function DistanciaPuntos(ori, desti) {
			var distancia = google.maps.geometry.spherical.computeDistanceBetween(ori, desti);		
			return distancia;
		}
	</script>
  </head>
  <body BACKGROUND="http://www.gifmania.com/Gif-Animados-Web/Imagenes-Rotulos-Webs/Rotulos-Cargando/Loading-Estrella-62151.gif" >
	<div id="inicio">
		<input style="width:400px" type="text" id="dircliente" name="dircliente" />
		<input style="width:400px" type="text" id="dirclientecoor" name="Cliente"/>
		<input style="width:400px" type="text" id="dirvehiculo" name="dirvehiculo" />
		<input style="width:400px" type="text" id="dirvehiculocoor" name="Vehiculo"/>
		<input style="width:400px" type="text" id="dirchofer" name="dirchofer" />
		<input style="width:400px" type="text" id="dirchofercoor" name="Chofer"/>	
	</div>
    <div id="map_canvas"></div>
	<table id="box"></table>
	<table id="data"></table>
  </body>
</html>
